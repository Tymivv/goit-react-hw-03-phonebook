{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleChange","target","value","setState","handelSubmit","e","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","filteredContacts","onDelete","map","id","nameContact","tel","onClick","Filter","App","contacts","filter","addContacts","some","alert","newContact","nanoid","console","log","prevState","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","includes","deleteContacts","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.735a0e69.chunk.js","sourcesContent":["import { Component } from 'react';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  ////// записує контакт\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  ////передає імя і тел\r\n  handelSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit({ ...this.state });\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handelSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n        ;\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ContactList = ({ filteredContacts, onDelete }) => (\r\n  <ul>\r\n    {filteredContacts.map(({ id, nameContact, tel }) => (\r\n      <li key={id}>\r\n        {nameContact} : {tel}\r\n        <button type=\"button\" onClick={onDelete(id)}>\r\n          Delete {nameContact}\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.array,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contact by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n      required\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport { nanoid } from 'nanoid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', nameContact: 'Rosie Simpson', tel: '459-12-56' },\r\n      { id: 'id-2', nameContact: 'Hermione Kline', tel: '443-89-12' },\r\n      { id: 'id-3', nameContact: 'Eden Clements', tel: '645-17-79' },\r\n      { id: 'id-4', nameContact: 'Annie Copeland', tel: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  ////////додає контакт\r\n\r\n  addContacts = ({ name, number }) => {\r\n    if (\r\n      this.state.contacts.some(\r\n        ({ id, nameContact, tel }) => nameContact === this.state.name,\r\n      )\r\n    ) {\r\n      alert(`name \"${this.state.name}\" is already in list`);\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: nanoid(),\r\n      nameContact: name,\r\n      tel: number,\r\n    };\r\n    console.log(newContact);\r\n    this.setState(prevState => ({\r\n      contacts: [...prevState.contacts, newContact],\r\n    }));\r\n  };\r\n  // шукає контакт\r\n\r\n  handleFilterChange = value => this.setState({ filter: value });\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ nameContact }) =>\r\n      nameContact.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  ////видаляє контакт\r\n\r\n  // deleteContacts = id => {\r\n  //   this.setState(prevState => ({\r\n  //     contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n  //   }));\r\n  // };\r\n\r\n  deleteContacts = id => () => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebooc</h1>\r\n        <ContactForm onSubmit={this.addContacts} />\r\n\r\n        <Filter\r\n          value={this.state.filter}\r\n          onChange={e => this.handleFilterChange(e.target.value)}\r\n        />\r\n\r\n        <ContactList\r\n          onDelete={this.deleteContacts}\r\n          filteredContacts={this.getFilteredContacts()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}